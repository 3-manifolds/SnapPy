# -*- coding: utf-8 -*-
#
# PLink documentation build configuration file, created by
# sphinx-quickstart on Wed Apr 29 21:34:28 2009.
#
# This file is execfile()d with the current directory set to its containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import sys, os, datetime, sysconfig, platform

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.

def build_lib_dir():
    if sys.platform == 'darwin':
        target = sysconfig.get_platform().split('-')[-1]
        machine = platform.machine()
        # Check if we're cross-compiling.  If so, module must already
        # have been built for the host architecture.
        if target == 'universal2':
            python_platform = 'macosx-10.9-universal2'
        elif target != machine:
            python_platform = {'x86_64':'macosx-10.9-x86_64',
                               'arm64': 'macosx-11-arm64'}[machine]
        else:
            python_platform = sysconfig.get_platform()

    else:
        python_platform = sysconfig.get_platform()

    v0, v1 = sys.version_info[:2]
    old_path = os.path.join(
        '..',
        'build',
        f'lib.{python_platform}-{v0}.{v1}')
    new_path = os.path.join(
        '..',
        'build',
         f'lib.{python_platform}-cpython-{v0}{v1}')
    return os.path.abspath(old_path), os.path.abspath(new_path)

for path in build_lib_dir():
    print('sys.path addition:', path)
    sys.path.insert(0, path)

import snappy
print('Using: ' + snappy.__file__)

# -- General configuration -----------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be extensions
# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = ['sphinx.ext.autodoc', 'sphinx.ext.mathjax', 'sphinx.ext.autosectionlabel']

# Add any paths that contain templates here, relative to this directory.
# templates_path = ['_templates']

# The suffix of source filenames.
source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8'

# The master toctree document.
master_doc = 'index'

# Organize section labels hierarchically by file.
autosectionlabel_prefix_document = True

# General information about the project.


project = u'SnapPy'
copyright = u'2009-%d, by Marc Culler, Nathan Dunfield, Matthias Goerner, Jeffrey Weeks and others' % datetime.datetime.now().year

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.

with open('../python/version.py') as version:
    exec(version.read())

# The full version, including alpha/beta/rc tags.
release = version

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# List of documents that shouldn't be included in the build.
#unused_docs = []

# List of directories, relative to source directory, that shouldn't be searched
# for source files.
exclude_trees = ['_build']

# The reST default role (used for this markup: `text`) to use for all documents.
#default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
#add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []

rst_epilog = """
.. |release_date| replace:: %s
""" % release_date
tarball = "snappy-%s.tar.gz" % release
tarball_url = "https://pypi.python.org/packages/source/s/snappy/" + tarball
rst_epilog += '.. |tarball| replace:: ' + tarball + '\n'
rst_epilog += '.. _tarball: ' + tarball_url + '\n'


# Suppress "self" in method names.

def suppress_method_arg_self(app, what, name, obj, options,
                            signature, return_annotation):
    if what == 'method':
        candidates = ['self', 'manifold']
        for name in candidates:
            for prefix in ['(' + name + ', ', '(' + name]:
                if signature.startswith(prefix):
                    signature = "(" + signature[len(prefix):]
        return (signature, return_annotation)

def setup(app):
    app.connect("autodoc-process-signature",
                suppress_method_arg_self)


# -- Options for HTML output ---------------------------------------------------

# The theme to use for HTML and HTML Help pages.  Major themes that come with
# Sphinx are currently 'default' and 'sphinxdoc'.
html_theme = 'classic'
#html_theme = 'sphinx_rtd_theme'
#html_theme = 'furo'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
html_theme_options = {
    'body_max_width':'90%'
}

# Add any paths that contain custom themes here, relative to this directory.
#html_theme_path = []

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
#html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#html_logo = None

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']
snappy_custom_css_file = f'snappy_{html_theme}.css'
if os.path.exists('_static/' + snappy_custom_css_file):
    html_css_files = [snappy_custom_css_file]

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
#html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
#html_use_modindex = True

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
#html_show_sourcelink = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# If nonempty, this is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = ''

# Output file base name for HTML help builder.
htmlhelp_basename = 'SnapPydoc'


# -- Options for LaTeX output --------------------------------------------------

# The paper size ('letter' or 'a4').
#latex_paper_size = 'letter'

# The font size ('10pt', '11pt' or '12pt').
#latex_font_size = '10pt'

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass [howto/manual]).
latex_documents = [
  ('index', 'SnapPy.tex', u'SnapPy Documentation',
   u'Marc Culler (culler@math.uic.edu) and Nathan Dunfield (nmd@illinois.edu)',
   'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# Additional stuff for the LaTeX preamble.
#latex_preamble = ''

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
#latex_use_modindex = True
